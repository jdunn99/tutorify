import React from "react";
import Head from "next/head";
import { getSession } from "next-auth/react";
import { Role } from "@prisma/client";
import {
  GetServerSideProps,
  GetServerSidePropsContext,
  InferGetServerSidePropsType,
} from "next";
import { prisma } from "@/server/prisma";

export default function Home({
  session,
}: InferGetServerSidePropsType<typeof getServerSideProps>) {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="h-screen overflow-auto">
        {JSON.stringify(session)}
        <ul></ul>
      </main>
    </>
  );
}

export async function getServerSideProps(context: GetServerSidePropsContext) {
  const session = await getSession(context);

  if (!session) return { redirect: { destination: "/auth/signin" } };

  // if they don't have a profile. create one.
  await prisma.profile.upsert({
    where: { userId: session.user.id },
    update: {},
    create: {
      name: session.user.name || "",
      user: { connect: { id: session.user.id } },
    },
  });

  return {
    props: {
      session,
    },
  };
}
